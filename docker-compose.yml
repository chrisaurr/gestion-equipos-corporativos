services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: inventario-postgres
    environment:
      POSTGRES_DB: inventario
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - inventario-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d inventario"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Application (for future deployment)
  app:
    build: .
    container_name: inventario-app
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/inventario
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - inventario-network
    restart: unless-stopped
    profiles:
      - production  # Only start with --profile production

volumes:
  postgres_data:
    driver: local

networks:
  inventario-network:
    driver: bridge